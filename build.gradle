plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.openapi.generator" version "6.0.1"
    id "org.springdoc.openapi-gradle-plugin" version "1.6.0"
}

group = 'ta3ik'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.18.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.flywaydb:flyway-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:oracle-xe'

    compileOnly("org.openapitools:openapi-generator-gradle-plugin:6.5.0")

}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile).configureEach {
    dependsOn(tasks.clean)
    dependsOn(tasks.openApiGenerate)
}

compileJava.dependsOn tasks.named("openApiGenerate")

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/api-spec/api.yml".toString()
    outputDir = "$buildDir/generated".toString()
    apiPackage = "linkreduction.api"
    modelPackage = "linkreduction.model"
    modelNameSuffix = "Json"
    configOptions = [
            delegatePattern: "true"
    ]
}